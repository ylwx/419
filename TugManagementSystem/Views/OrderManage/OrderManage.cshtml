@{
    ViewBag.Title = "OrderManage";
    ViewBag.MenuId = "menu5";
    ViewBag.SubMenuIndex = 0;
    Layout = "~/Views/Shared/_ContentLayout.cshtml";
}
@model TugDataModel.OrderInfor
<div id="main-content">
    <div class="container">
        <div class="row">
            <div id="content" class="col-lg-12">
                <!-- PAGE HEADER-->
                <div class="row">
                    <div class="col-sm-12">
                        <div class="page-header">
                            <!-- STYLER -->
                            <!-- /STYLER -->
                            <!-- BREADCRUMBS -->
                            <ul class="breadcrumb">
                                <li>
                                    <i class="fa fa-home"></i>
                                    <a href="#">@Resources.Language.HomePage</a>
                                </li>
                                <li>
                                    <a href="#">@Resources.Language.Order</a>
                                </li>
                                <li>
                                    @Resources.Language.OrderManage
                                </li>
                            </ul>
                            <!-- /BREADCRUMBS -->
                            <div class="clearfix">
                                <h3 class="content-title pull-left">Grid Test</h3>
                            </div>
                            <div class="description">Table</div>
                        </div>
                    </div>
                </div>
                <!-- /PAGE HEADER -->
                @*<div class="row">
                        <div class="col-md-12">
                            <div class="box border orange">
                                <div class="box-title">
                                </div>
                                <div class="box-body">
                                    <div>
                                        <ul>
                                            <li>@Model.Code</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>*@
                <!-- SAMPLE -->
                <div class="row">
                    <div class="col-md-12">
                        <!-- BOX -->
                        <div class="box border orange">
                            <div class="box-title">
                                <h4><i class="fa fa-bars"></i>@Resources.Language.OrderManage</h4>
                            </div>
                            <div id="jqGridContainerBox" class="box-body">
                                <table id="jqGrid"></table>
                                <div id="jqGridPager"></div>
                            </div>
                        </div>
                        <!-- /BOX -->
                    </div>
                </div>
                <!-- /SAMPLE -->
                <div class="footer-tools">
                    <span class="go-top">
                        <i class="fa fa-chevron-up"></i> Top
                    </span>
                </div>
            </div>
        </div>
        
        <div id="services" class="row" hidden>
            @{
                List<TugDataModel.CustomField> list = ViewBag.Services;
                for (int i = 0; i < list.Count; i++)
                {
                    string s_id = "service" + i.ToString();
                    <div id='@s_id'>
                        <span>@list[i].IDX</span>
                        <span>@list[i].CustomValue</span>
                        <span>@list[i].CustomLabel</span>
                    </div>
                }
                
            }
            
        </div>
    </div>
</div>

<script type="text/javascript">
    var tableConfig = null;

    $(document).ready(Init);

    function Init() {
        {

            if (tableConfig == null) {
                GetTableConfig();
            }

            $("#jqGrid").jqGrid({
                //url: 'http://trirand.com/blog/phpjqgrid/examples/jsonp/getjsonp.php?callback=?&qwery=longorders',
                url: '@Url.Action("GetData", "OrderManage")',
                mtype: "GET",
                datatype: "json",
                colModel: tableConfig.columns,
                viewrecords: true,
                //width: 780,
                height: '100%', //'auto', //350,
                rowNum: 20,
                autowidth: true,
                editurl: '@Url.Action("AddEdit", "OrderManage")',
                pager: "#jqGridPager",
                //loadonce: true,
                rowList: ['20', '30', '50', '80', '100'],
                rownumbers: true,
                shrinkToFit: false,     //指定各列宽度
                sortable: true,          //列可移动
                //footerrow: true,
                colMenu: true          //列菜单
            });

            $('#jqGrid').jqGrid('filterToolbar', { searchResult: true, searchOperators: true });
            $("#jqGrid").jqGrid('bindKeys');  //光标可以控制上下移动

            $('#jqGridContainerBox').resize(function () {
                var width = $('#jqGridContainerBox').width();
                $("#jqGrid").setGridWidth(width);
            });

            $('#jqGrid').navGrid('#jqGridPager', { edit: false, add: false, del: false, refresh: false, view: false, search: false })

                .navButtonAdd('#jqGridPager', {
                    caption: "", title: "刷新", buttonicon: "ui-icon-refresh",
                    onClickButton: function () {
                        $('#jqGrid').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                    }
                })
                .navButtonAdd('#jqGridPager', {
                    caption: "", title: "清空搜索", buttonicon: "ui-icon-circle-minus",
                    onClickButton: function () {
                        var grid = $('#jqGrid')[0];
                        grid.clearToolbar();
                        $('#jqGrid').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                    }
                })
                .navSeparatorAdd("#jqGridPager", { sepclass: "ui-separator", sepcontent: '' })
                .navButtonAdd('#jqGridPager', {
                    caption: "", title: "删除选中的行", buttonicon: "ui-icon-trash",
                    onClickButton: function () {
                        var rowid = jQuery('#jqGrid').jqGrid('getGridParam', 'selrow');
                        var dr = jQuery("#jqGrid").jqGrid('getRowData', rowid);//得到该行的数据
                        if (rowid != null) {
                            if (confirm('确定要删除所选的记录吗?')) {
                                var d = new Date();
                                $.ajax(
                                    {
                                        type: "post",
                                        url: '@Url.Action("Delete", "OrderManage")',
                                        data: { 'oper': 'delete', 'data': dr },//"oper=delete&id=" + gr,
                                        dataType: 'json',
                                        success: function (result) {
                                            alert(result.message);
                                            //jQuery("#jqGrid").jqGrid('delRowData', rowid);
                                            $('#jqGrid').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                                        },

                                    }
                                    );
                            }
                        }
                        else {
                            alert('选中一行');
                        }
                    },
                    position: "last"
                });

            $('#jqGrid').inlineNav('#jqGridPager',
                {
                    edit: true,
                    add: true,
                    del: true,
                    cancel: true,
                    editParams: {
                        keys: true,
                        successfunc: function (val) {
                            if (val.responseText != "") {
                                var ret = $.parseJSON(val.responseText);
                                alert(ret.message);
                                $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                            }
                        },
                        url: null, //'/api/values',
                        mtype: 'POST'
                    },

                    addParams: {
                        keys: true,
                        successfunc: function (val) {
                            if (val.responseText != "") {
                                var ret = $.parseJSON(val.responseText);
                                alert(ret.message);
                                $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                            }
                        },
                        errorfunc: function (rowid, xhr) {
                            alert(xhr.responseText);
                            $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                        }
                    }
                });

            //最后调用，冻结列
            //$("#jqGrid").jqGrid("setFrozenColumns");
        }
    }

    function GetTableConfig() {
        tableConfig = {
            columns: [

                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_IDX', index: "IDX", name: "IDX", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true,
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_IsGuest', name: "IsGuest", width: 90, editable: true, edittype: "checkbox",
                    editrules: { required: true }, colmenu: false,
                    editoptions: { value: "是:否" },  //yes:是， no:否
                    hidden: false,
                    stype: 'select',

                    searchoptions: {
                        //sopt: ["ge", "le"],
                        value: "全部:全部;是:是;否:否",
                        dataEvents: [
                            {
                                type: 'change',
                                fn: function (e) {
                                    //alert(e);
                                    var grid = $('#jqGrid')[0];
                                    grid.triggerToolbar();

                                }
                            }
                        ]
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_Code', name: "Code", width: 100, editable: false, edittype: "text",
                    editrules: { required: false }, hidden: false,
                    editoptions: {
                        //defaultValue: function () { return Date().toString(); }
                    },
                    searchoptions: { sopt: ["cn"] }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_CustomerID', name: "CustomerID", width: 100, editable: true, edittype: "text",
                    editrules: { required: true, integer: true },
                    hidden: true,
                    editoptions: {
                        defaultValue: -1
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_CustomerName', name: "CustomerName", width: 120, editable: true, edittype: "text",
                    editrules: { required: true }, hidden: false,
                    coloptions: { sorting: true, columns: false, filtering: false, seraching: true, grouping: true, freeze: false },
                    editoptions: {
                        dataInit: function (element) {
                            window.setTimeout(function () {
                                $(element).autocomplete({
                                    id: 'AutoComplete',
                                    source: function (request, response) {
                                        this.xhr = $.ajax({
                                            url: '@Url.Action("GetCustomer", "OrderManage")',
                                            data: request,
                                            type: 'GET',
                                            dataType: 'json',
                                            success: function (data) {
                                                response($.map(data.list, function (item) {
                                                    return {
                                                        id: item.CustomerID,
                                                        label: item.ShipName,
                                                        value: item.ShipName
                                                    };
                                                }));
                                            },

                                            error: function (model, response, options) {
                                                response([]);
                                            }
                                        });
                                    },
                                    select: function (event, ui) {
                                    },
                                    change: function (event, ui) {

                                        var rowid = jQuery("#jqGrid").jqGrid('getGridParam', 'selrow');//得到最后一次选择的行

                                        if (ui.item != null) {
                                            var customerId_id = rowid + "_CustomerID";
                                            $('#' + customerId_id).val(ui.item.id);

                                            //jQuery("#jqGrid").setCell(rowid, 'CustomerID', ui.item.id);
                                        }
                                        else {
                                            var customerId_id = rowid + "_CustomerID";
                                            $('#' + customerId_id).val(-1);
                                            //jQuery("#jqGrid").setCell(rowid, 'CustomerID', -1);
                                        }

                                        //var dr = jQuery("#jqGrid").jqGrid('getRowData', rowid);//得到该行的数据
                                    },
                                    autoFocus: false
                                });
                            }, 100);
                        }

                    }

                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_OrdTime', name: "OrdTime", width: 100, editable: true, edittype: "text",
                    editrules: { required: true, time: true }, hidden: false,
                    editoptions: {
                        defaultValue: function () { var time = new Date(); return time.Format('hh:mm') }
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_WorkTime', name: "WorkTime", width: 100, editable: true, edittype: "text",
                    editrules: { required: true, time: true }, hidden: false,
                    editoptions: {
                        defaultValue: function () { var time = new Date(); return time.Format('hh:mm') }
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_EstimatedCompletionTime', name: "EstimatedCompletionTime", width: 100,
                    editable: true, edittype: "text", editrules: { required: true, time: true }, hidden: false,
                    editoptions: {
                        defaultValue: function () { var time = new Date(); return time.Format('hh:mm') }
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_ShipID', name: "ShipID", width: 100, editable: true, edittype: "text",
                    hidden: true,
                    editrules: { required: true, integer: true },
                    editoptions: {
                        defaultValue: -1
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_ShipName', name: "ShipName", width: 120, editable: true, edittype: "text",
                    editrules: { required: true }, hidden: false,
                    editoptions: {
                        dataInit: function (element) {
                            window.setTimeout(function () {
                                $(element).autocomplete({
                                    id: 'AutoComplete',
                                    source: function (request, response) {
                                        this.xhr = $.ajax({
                                            url: '@Url.Action("GetCustomer", "OrderManage")',
                                            data: request,
                                            type: 'GET',
                                            dataType: 'json',
                                            success: function (data) {
                                                response($.map(data.list, function (item) {
                                                    return {
                                                        id: item.CustomerID,
                                                        label: item.ShipName,
                                                        value: item.ShipName
                                                    };
                                                }));
                                            },

                                            error: function (model, response, options) {
                                                response([]);
                                            }
                                        });
                                    },
                                    select: function (event, ui) {

                                    },
                                    change: function (event, ui) {

                                        var rowid = jQuery("#jqGrid").jqGrid('getGridParam', 'selrow');//得到最后一次选择的行

                                        if (ui.item != null) {
                                            var shipId_id = rowid + "_ShipID";
                                            $('#' + shipId_id).val(ui.item.id);

                                            //jQuery("#jqGrid").setCell(rowid, 'ShipID', ui.item.id);
                                        }
                                        else {
                                            var shipId_id = rowid + "_ShipID";
                                            $('#' + shipId_id).val(-1);
                                            //jQuery("#jqGrid").setCell(rowid, 'ShipID', -1);
                                        }

                                        //var dr = jQuery("#jqGrid").jqGrid('getRowData', rowid);//得到该行的数据
                                    },
                                    autoFocus: false
                                });
                            }, 100);
                        }

                    }

                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_LinkMan', name: "LinkMan", width: 100, editable: true, edittype: "text",
                    editrules: { required: true }, hidden: false
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_LinkPhone', name: "LinkPhone", width: 100, editable: true, edittype: "text",
                    editrules: { required: true }, hidden: false
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_LinkEmail', name: "LinkEmail", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, email: true }, hidden: false
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_WorkPlace', name: "WorkPlace", width: 100, editable: true, edittype: "text",
                    editrules: { required: true }, hidden: false
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_ServiceNatureIDS', name: "ServiceNatureIDS", width: 100, editable: true, edittype: "text",
                    editrules: { required: true }, hidden: true,
                    editoptions: {
                        defaultValue: "/"
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_ServiceNatureNames', name: "ServiceNatureNames", width: 260, editable: true, edittype: "custom",
                    editrules: { required: true }, hidden: false,
                    editoptions: {
                        custom_value: getServiceNatureElementValue,
                        custom_element: createServiceNatureEditElement
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_WorkStateID', name: "WorkStateID", width: 100, editable: true, edittype: "text",
                    editrules: { required: true, custom_func: validateTugID, custom: true }, hidden: true,
                    editoptions: {
                        defaultValue: -1
                    }

                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_WorkStateValue', name: "WorkStateValue", width: 100, editable: true, edittype: "text",
                    editrules: { required: true, custom_func: validateTugID, custom: true }, hidden: true,
                    editoptions: {
                        defaultValue: -1
                    }

                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_WorkStateLabel', name: "WorkStateLabel", width: 100, editable: true, edittype: "select",
                    editrules: { required: true }, hidden: false,
                    editoptions: {
                        //multiple: true,
                        dataUrl: '@Url.Action("GetCustomField", "Base", new { CustomName = "OrderInfor.WorkStateID" })',
                        //value: "-1:;1:One;2:Two",
                        dataEvents: [
                            {
                                type: 'change',
                                fn: function (e) {
                                    var rowid = jQuery("#jqGrid").jqGrid('getGridParam', 'selrow');//得到最后一次选择的行
                                    if (rowid != null) {
                                        var workStateID_id = rowid + "_WorkStateID";
                                        var workStateValue_id = rowid + "_WorkStateValue";
                                        $('#' + workStateID_id).val($(this).val().split("~")[0]);
                                        $('#' + workStateValue_id).val($(this).val().split("~")[1]);
                                        //$('#' + workStateID_id).val($(this).find("option:selected").text());
                                    }
                                }
                            }
                        ]
                    },

                    @*stype:"select",
                    searchoptions: {
                        dataUrl: '@Url.Action("GetCustomField", "Base", new { CustomName = "1"})',
                    }*@
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_BigTugNum', name: "BigTugNum", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, integer: true, minValue: 0 }, hidden: false,
                    editoptions: {
                        defaultValue: 0
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_MiddleTugNum', name: "MiddleTugNum", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, integer: true, minValue: 0 }, hidden: false,
                    editoptions: {
                        defaultValue: 0
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.V_OrderInfor_SmallTugNum', name: "SmallTugNum", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, integer: true, minValue: 0 }, hidden: false,
                    editoptions: {
                        defaultValue: 0
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.Remark', name: "Remark", width: 200, editable: true, edittype: "textarea",
                    editrules: { required: false }, hidden: false
                },
                {
                    align: 'center', label: '@Resources.Language.OwnerID', name: "OwnerID", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true,
                    editoptions: {
                        defaultValue: -1
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.UserID', name: "UserID", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center',
                    label: '@Resources.Language.CreateDate', name: "CreateDate", width: 100, editable: false, edittype: "text",
                    editrules: { required: false, date: true }, hidden: false,
                    //formatter: 'date',
                    //formatoptions: { srcformat: 'yyyy-mm-dd', newformat: 'yyyy-mm-dd' },
                    datefmt: 'yyyy-mm-dd',
                    sorttype: 'date',
                    editoptions: {
                        dataInit: function (element) {
                            $(element).datepicker({
                                //id: 'orderCreateDate_datePicker',
                                dateFormat: 'yy-mm-dd',
                                showOn: 'focus'
                            });
                        }
                    },

                    searchoptions: {
                        dataInit: function (element) {
                            $(element).datepicker({
                                //id: 'orderCreateDate_datePicker',
                                dateFormat: 'yy-mm-dd',
                                showOn: 'focus'
                            });
                        },

                        dataEvents: [
                            {
                                type: 'change',
                                fn: function (e) {
                                    var grid = $('#jqGrid')[0];
                                    grid.triggerToolbar();

                                }
                            }
                        ]
                    }
                },
                {
                    align: 'center',
                    label: '@Resources.Language.LastUpDate', name: "LastUpDate", width: 100, editable: false, edittype: "text",
                    editrules: { required: false, date: true }, hidden: false,
                    //formatter: 'date',
                    datefmt: 'yyyy-mm-dd',
                    sorttype: 'date',
                    editoptions: {
                        dataInit: function (element) {
                            $(element).datepicker({
                                //id: 'orderCreateDate_datePicker',
                                dateFormat: 'yy-mm-dd',
                                showOn: 'focus'
                            });
                        }
                    },
                    searchoptions: {
                        dataInit: function (element) {
                            $(element).datepicker({
                                //id: 'orderCreateDate_datePicker',
                                dateFormat: 'yy-mm-dd',
                                showOn: 'focus'
                            });
                        },

                        dataEvents: [
                            {
                                type: 'change',
                                fn: function (e) {
                                    var grid = $('#jqGrid')[0];
                                    grid.triggerToolbar();

                                }
                            }
                        ]
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol1', name: "UserDefinedCol1", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol2', name: "UserDefinedCol2", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol3', name: "UserDefinedCol3", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol4', name: "UserDefinedCol4", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol5', name: "UserDefinedCol5", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, number: true }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol6', name: "UserDefinedCol6", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, integer: true }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol7', name: "UserDefinedCol7", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, integer: true }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol8', name: "UserDefinedCol8", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, integer: true }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol9', name: "UserDefinedCol9", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, date: true }, hidden: true,
                    datefmt: 'yyyy-mm-dd',
                    sorttype: 'date',
                    editoptions: {
                        dataInit: function (element) {
                            $(element).datepicker({
                                dateFormat: 'yy-mm-dd',
                                showOn: 'focus'
                            });
                        }
                    }
                },

                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol10', name: "UserDefinedCol10", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, date: true }, hidden: true,
                    datefmt: 'yyyy-mm-dd',
                    sorttype: 'date',
                    editoptions: {
                        dataInit: function (element) {
                            $(element).datepicker({
                                dateFormat: 'yy-mm-dd',
                                showOn: 'focus'
                            });
                        }
                    }
                },
                { align: 'center', label: 'Billing', name: "Billing", width: 100, editable: true, edittype: "text", editrules: { required: false }, hidden: true },
                { align: 'center', label: 'Scheduler', name: "Scheduler", width: 100, editable: true, edittype: "text", editrules: { required: false }, hidden: true }

            ]
        };
    }

    function createServiceNatureEditElement(value, editOptions) {
        var services = $('#services div');


        if (value == "" || value == "/") {
            if (services != null) {

                var span = $("<span />");

                for (var i = 0; i < services.length; ++i) {
                    var label = $("<span />", { html: $($(services[i]).children('span')[2]).html() });
                    var checkbox = $("<input>",
                        {
                            type: "checkbox",
                            value: $($(services[i]).children('span')[0]).html() + '~' + $($(services[i]).children('span')[1]).html() + '~' + $($(services[i]).children('span')[2]).html(),
                            name: "service" + i.toString()
                        });

                    if ((i + 1) % (services.length / 2 + 1) == 0) {
                        var br = $("<br />");
                        span.append(br);
                    }

                    span.append(label).append(checkbox);
                }
                return span;
            }
        }
        else {
            var span = $("<span />");

            var list = value.split("/");

            if (list.length > 0) {

                var labels = new Array(services.length);
                for (var i = 0; i < services.length; ++i) {
                    labels[i] = $($(services[i]).children('span')[2]).html();
                }
                var flags = new Array(services.length);
                for (var i = 0; i < services.length; i++) {
                    flags[i] = false;
                }

                for (var i = 0; i < list.length; ++i) {
                    for (var j = 0; j < flags.length; j++) {
                        if (list[i] == labels[j])
                            flags[j] = true;
                    }
                }

                for (var i = 0; i < services.length; ++i) {
                    var label = $("<span />", { html: $($(services[i]).children('span')[2]).html() });
                    var checkbox = $("<input>",
                        {
                            type: "checkbox",
                            value: $($(services[i]).children('span')[0]).html() + '~' + $($(services[i]).children('span')[1]).html() + '~' + $($(services[i]).children('span')[2]).html(),
                            name: "service" + i.toString(),
                            checked: flags[i]
                        });

                    if ((i + 1) % (services.length / 2 + 1) == 0) {
                        var br = $("<br />");
                        span.append(br);
                    }

                    span.append(label).append(checkbox);
                }
            }

            return span;
        }


        //return span;
        //if (value == "" || value == "/") {
        //    var span = $("<span />");
        //    var label0 = $("<span />", { html: "泊码头" });
        //    var checkbox0 = $("<input>", { type: "checkbox", value: "0:泊码头", name: "service0" });
        //    var label1 = $("<span />", { html: "进坞" });
        //    var checkbox1 = $("<input>", { type: "checkbox", value: "1:进坞", name: "service1" });
        //    var label2 = $("<span />", { html: "护航" });
        //    var checkbox2 = $("<input>", { type: "checkbox", value: "2:护航", name: "service2" });
        //    var label3 = $("<span />", { html: "守护" });
        //    var checkbox3 = $("<input>", { type: "checkbox", value: "3:守护", name: "service3" });
        //    var br = $("<br />");
        //    var label4 = $("<span />", { html: "离码头" });
        //    var checkbox4 = $("<input>", { type: "checkbox", value: "4:离码头", name: "service4" });
        //    var label5 = $("<span />", { html: "出坞" });
        //    var checkbox5 = $("<input>", { type: "checkbox", value: "5:出坞", name: "service5" });
        //    var label6 = $("<span />", { html: "拖带" });
        //    var checkbox6 = $("<input>", { type: "checkbox", value: "6:拖带", name: "service6" });
        //    var label7 = $("<span />", { html: "其他" });
        //    var checkbox7 = $("<input>", { type: "checkbox", value: "7:其他", name: "service7" });

        //    span.append(label0).append(checkbox0).append(label1).append(checkbox1).append(label2).append(checkbox2)
        //        .append(label3).append(checkbox3).append(br).append(label4).append(checkbox4)
        //        .append(label5).append(checkbox5).append(label6).append(checkbox6).append(label7).append(checkbox7);

        //    return span;
        //}
        //else {
        //    var list = value.split("/");
        //    if (list.length > 0) {

        //        var span = $("<span />");

        //        var labels = new Array("泊码头", "进坞", "护航", "守护", "离码头", "出坞", "拖带", "其他");
        //        var flags = new Array(false, false, false, false, false, false, false, false);
        //        for (var i = 0; i < list.length; ++i) {
        //            for (var j = 0; j < flags.length; j++) {
        //                if (list[i] == labels[j])
        //                    flags[j] = true;
        //            }
        //        }

        //        var label0 = $("<span />", { html: "泊码头" });
        //        var checkbox0 = $("<input>", { type: "checkbox", value: "0:泊码头", name: "service0", checked: flags[0] });
        //        var label1 = $("<span />", { html: "进坞" });
        //        var checkbox1 = $("<input>", { type: "checkbox", value: "1:进坞", name: "service1", checked: flags[1] });
        //        var label2 = $("<span />", { html: "护航" });
        //        var checkbox2 = $("<input>", { type: "checkbox", value: "2:护航", name: "service2", checked: flags[2] });
        //        var label3 = $("<span />", { html: "守护" });
        //        var checkbox3 = $("<input>", { type: "checkbox", value: "3:守护", name: "service3", checked: flags[3] });
        //        var br = $("<br />");
        //        var label4 = $("<span />", { html: "离码头" });
        //        var checkbox4 = $("<input>", { type: "checkbox", value: "4:离码头", name: "service4", checked: flags[4] });
        //        var label5 = $("<span />", { html: "出坞" });
        //        var checkbox5 = $("<input>", { type: "checkbox", value: "5:出坞", name: "service5", checked: flags[5] });
        //        var label6 = $("<span />", { html: "拖带" });
        //        var checkbox6 = $("<input>", { type: "checkbox", value: "6:拖带", name: "service6", checked: flags[6] });
        //        var label7 = $("<span />", { html: "其他" });
        //        var checkbox7 = $("<input>", { type: "checkbox", value: "7:其他", name: "service7", checked: flags[7] });

        //        span.append(label0).append(checkbox0).append(label1).append(checkbox1).append(label2).append(checkbox2).append(label3).append(checkbox3)
        //            .append(br).append(label4).append(checkbox4).append(label5).append(checkbox5)
        //            .append(label6).append(checkbox6).append(label7).append(checkbox7);

        //        return span;
        //    }
        //}
    }

    // The javascript executed specified by JQGridColumn.EditTypeCustomGetValue when EditType = EditType.Custom
    // One parameter passed - the custom element created in JQGridColumn.EditTypeCustomCreateElement
    function getServiceNatureElementValue(elem, oper, value) {
        if (oper === "set") {
        }

        if (oper === "get") {
            var checkboxes = $(elem).find("input:checkbox:checked");
            var str_values = "";
            //var str_labels = "/";
            for (var i = 0; i < checkboxes.length; ++i) {
                str_values += $(checkboxes[i]).val() + "/";
            }
            if (checkboxes.length > 0) {
                str_values = str_values.substr(0, str_values.length - 1);
            }

            //for (var i = 0; i < checkboxes.length; ++i) {
            //    str_labels += $(checkboxes[i]).prev('span').html() + "/";
            //}
            //return $(elem).find("input:checkbox:checked").val();

            //alert(str_values);
            return str_values;
        }
    }


    function validateTugID(value, column) {
        var re = /^[0-9]+[0-9]*]*$/;  //判断输入是否是正整数和0
        if (!re.test(value))
            return [false, "请选择一个工作状态"];
        else
            return [true, ""];
    }
</script>